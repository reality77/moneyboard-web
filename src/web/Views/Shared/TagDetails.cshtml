@using web.Utils

@model TagModel
@{
    ViewData["Title"] = $"Tiers {Model.Details.Caption}";
}

@section Stylesheets
{
    <link rel="stylesheet" href="~/lib/chart.js/dist/Chart.css" />
}

<h2>@Model.Details.TypeKey @Model.Details.Caption</h2>
<span class="little">@Model.Details.Key</span>

<div class="row">
    <a asp-controller="Tags" asp-action="Merge" asp-route-tagType="@Model.Details.TypeKey" asp-route-tagKey="@Model.Details.Key">Fusionner</a></div>
</div>

<div class="row">
    <div class="col-12 col-md-6">
        <h3>Statistiques</h3>
        <canvas id="chartStatistics" width="400" height="400"></canvas>

        <div class="table100">
            <div class="table-cell table-header"></div>
            <div class="table-cell table-header">Amount</div>

        @foreach(var stat in Model.Statistics)
        {
            <div class="table-row">
                <div class="table-cell">@(new DateTime(stat.Year, stat.Month.Value, 1).ToString("MMM yyyy"))</div>
                <div class="table-cell">@stat.Total.ToCurrencyString()</div>
            </div>
        }
        </div>
    </div>

    <div class="col-12 col-md-6">
        <h3>Transactions</h3>
        <div class="table100">
            <div class="table-row">
                <div class="table-cell table-header">Date</div>
                <div class="table-cell table-header">Caption</div>
                <div class="table-cell table-header">Amount</div>
            </div>

        @foreach(var trx in Model.Transactions)
        {
            @await Html.PartialAsync("_SingleTransaction", trx);
        }
        </div>
    </div>
</div>


@section Scripts
{
    <script src="~/lib/chart.js/dist/Chart.min.js" ></script>

    @{decimal moyenne = Model.Statistics.Average(s => s.Total);}

    <script>
    var ctx = document.getElementById('chartStatistics').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {

            labels: [ 
                @Html.Raw(Model.Statistics.Select(s => $"'{s.ToDate().ToString("MMM yy")}'").Aggregate((a, b) => a + ", " + b))
            ],
            datasets: [{
                label: 'Montant',
                data: [
                    @Html.Raw(Model.Statistics.Select(s => s.Total.ToString(System.Globalization.CultureInfo.InvariantCulture)).Aggregate((a, b) => a + ", " + b))
                ],
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            },
            {
                label: 'Moyenne',
                data: [
                    @Html.Raw(Model.Statistics.Select(s => moyenne.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)).Aggregate((a, b) => a + ", " + b))
                ],
                // Changes this dataset to become a line
                type: 'line',
                borderColor: 'rgba(255, 132, 99, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
    </script>    
}
